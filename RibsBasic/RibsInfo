
RIB == Router + Interactor + View + Builder
: 기능 분리, RIB 들이 트리구조로 화면 전환과 기능 흐름을 관리

Interactor: 비즈니스 로직/상태의 주인. 생명주기(didBecomeActive, willResignActive)를 갖고, 사용자 입력을 처리하고 Presenter(View)로 출력 업데이트.
Router: 화면의 Attatch / detach 담당, 네비게이션과 흐름 제어의 중심
Builder: RIB의 생성자이자, 의존성 관리, 조립
View: UI
Dependency: 의존성
Listener: 자식 -> 부모로 이벤트를 올리는 콜백 프로토콜


Ribs 는 내부적으로 RxSwift를 의존하는 중임
내부 구조가 잘 쪼개져 있으면서도 복잡하여
실제 라이브러리를 사용하여 간단한 앱을 구성후 어떻게 동작하는지
역 추적 하는것으로 진행합니다.

